{"updatedAt":"2025-10-30T11:19:49.000Z","createdAt":"2025-10-28T13:22:05.772Z","id":"nr3lBmrps1WZ1vIq","name":"C.A.investigar","active":false,"isArchived":false,"nodes":[{"parameters":{"content":"## Subworkflow","height":572,"width":1847,"color":6},"id":"5ce94010-cc33-4d14-8191-b4a53bc23e7a","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[-16,448],"typeVersion":1},{"parameters":{"filters":{},"requestOptions":{}},"id":"1c61a837-6ee0-440b-ab3d-852c4bc95dd2","name":"n8n","type":"n8n-nodes-base.n8n","position":[672,208],"typeVersion":1,"credentials":{"n8nApi":{"id":"Vm9hrpp9EAkC4rzG","name":"lina_n8n_credential"}}},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"aa8e1c72-54ea-43e0-8571-f0fd44f70486","name":"Return","type":"n8n-nodes-base.set","position":[1648,576],"typeVersion":3.3},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"d5e014f4-6587-4941-a8a2-7a0c602c3282","name":"Get File","type":"n8n-nodes-base.httpRequest","position":[672,464],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"d7895fad-a39a-48db-a447-bb8af079f257","name":"If file too large","type":"n8n-nodes-base.if","position":[432,480],"typeVersion":2},{"parameters":{},"id":"fa06e98d-bfd7-4faf-bff9-2272a184d712","name":"Merge Items","type":"n8n-nodes-base.merge","position":[416,704],"typeVersion":2},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"},"id":"b369e1a3-8a04-4d86-b231-d2be680aec40","name":"isDiffOrNew","type":"n8n-nodes-base.code","position":[608,704],"typeVersion":1},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"a60430ab-18cd-4485-846b-6e296efbf35a","name":"Check Status","type":"n8n-nodes-base.switch","position":[1008,704],"typeVersion":1},{"parameters":{},"id":"701a4de5-e13e-4b5e-aade-9c627847f00c","name":"Same file - Do nothing","type":"n8n-nodes-base.noOp","position":[1232,576],"typeVersion":1},{"parameters":{},"id":"40c8d46d-2235-4a05-87db-b1579105676f","name":"File is different","type":"n8n-nodes-base.noOp","position":[1232,704],"typeVersion":1},{"parameters":{},"id":"c375df75-5458-423a-a9f8-4f8770704a4e","name":"File is new","type":"n8n-nodes-base.noOp","position":[1232,848],"typeVersion":1},{"parameters":{"resource":"file","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"5d2056f9-cf64-486c-a6af-a91eca59c313","name":"Create new file","type":"n8n-nodes-base.github","position":[1456,864],"typeVersion":1,"webhookId":"ee193336-697e-40af-a0e2-ecdf0a4bf73d","credentials":{"githubApi":{"id":"5ypNHmn86aweaZT4","name":"lina_token"}}},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"5c9125c7-784c-40f3-9835-d12af32c4bb5","name":"Edit existing file","type":"n8n-nodes-base.github","position":[1456,704],"typeVersion":1,"webhookId":"644517e3-e9a2-40c7-9a70-35c53f854532","credentials":{"githubApi":{"id":"5ypNHmn86aweaZT4","name":"lina_token"}}},{"parameters":{"options":{}},"id":"d32a54ef-3492-48ec-8c07-aa55d550a4bc","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[864,208],"typeVersion":3},{"parameters":{"assignments":{"assignments":[{"id":"dae43d3b-56e5-4098-b602-862ebf5cd073","name":"subPath","type":"string","value":"={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"}]},"includeOtherFields":true,"options":{}},"id":"ab907d60-6a00-4474-839f-18b1aabd407f","name":"Create sub path","type":"n8n-nodes-base.set","position":[816,704],"typeVersion":3.3},{"parameters":{"content":"## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using YYYY/MM/ for the directory path and ID.json for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the *Variables* feature but can be replaced with the Config node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on 1.44.1 it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.","height":385,"width":673,"color":4},"id":"26aaccd3-0f31-4732-bf3a-d993c25424b3","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[1936,16],"typeVersion":1},{"parameters":{"content":"## Main workflow loop","height":384,"width":1161,"color":7},"id":"0b499acc-fa42-4bdc-a300-70fb52e03bb5","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[288,48],"typeVersion":1},{"parameters":{"workflowId":"={{ $workflow.id }}","mode":"each","options":{}},"id":"539d7187-c2a8-4b9e-b0fb-bd24ce9339a1","name":"Execute Workflow","type":"n8n-nodes-base.executeWorkflow","position":[1056,224],"typeVersion":1,"onError":"continueErrorOutput"},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"15bc9897-839e-4ee5-a657-5025d3dafdf2","name":"Get file data","type":"n8n-nodes-base.github","position":[224,480],"typeVersion":1,"alwaysOutputData":true,"webhookId":"dfe47850-975b-4b7b-97b4-562aa2a38153","credentials":{"githubApi":{"id":"5ypNHmn86aweaZT4","name":"lina_token"}},"continueOnFail":true},{"parameters":{"assignments":{"assignments":[{"id":"8f6d1741-772f-462a-811f-4c334185e4f0","name":"repo_owner","type":"string","value":"={{ $vars.repo_owner }}"},{"id":"8cac215c-4fd7-422f-9fd2-6b2d1e5e0383","name":"repo_name","type":"string","value":"={{ $vars.repo_name }}"},{"id":"eee305e9-4164-462a-86bd-80f0d58a31ae","name":"repo_path","type":"string","value":"={{ $vars.repo_path }}"}]},"includeOtherFields":true,"options":{}},"id":"0d81ce92-8caa-470d-bd9a-8aad8a5dfcf5","name":"Config","type":"n8n-nodes-base.set","position":[208,720],"typeVersion":3.4},{"parameters":{"chatId":"={{ $json.message.chat.id }}","text":"Comenzando BackUp","additionalFields":{}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[512,208],"id":"1985a7d3-81b5-4ce5-b47a-352786128ea4","name":"Enviar Msje","webhookId":"14473fd2-2518-4cf6-9ea6-5230c007331c","credentials":{"telegramApi":{"id":"Y2Y3ArkzvoQpRAE9","name":"n8n_BckUp_bot"}}},{"parameters":{"chatId":"={{ $json.message.chat.id }}","text":"BackUp Completado","additionalFields":{}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[1056,64],"id":"4fd4f070-a8bd-4769-b3ba-3cd4a172c5d4","name":"Msje_Completo","webhookId":"14473fd2-2518-4cf6-9ea6-5230c007331c","credentials":{"telegramApi":{"id":"Y2Y3ArkzvoQpRAE9","name":"n8n_BckUp_bot"}}},{"parameters":{"chatId":"={{ $json.message.chat.id }}","text":"Fallo en subir/BackUp","additionalFields":{}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[1264,240],"id":"da51c551-f8d8-4b5c-8f4d-173ffd1eb6ab","name":"Msje_Fallo","webhookId":"155b2e59-33db-4153-8bba-8065b49895ef","credentials":{"telegramApi":{"id":"Y2Y3ArkzvoQpRAE9","name":"n8n_BckUp_bot"}}},{"parameters":{"rule":{"interval":[{}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[336,208],"id":"b997ed85-d586-409f-bbbd-00d9efa7c36f","name":"Schedule Trigger"},{"parameters":{},"id":"b12deca1-48fb-4d29-b6c5-6fc5e2729adb","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[4144,1840],"typeVersion":1},{"parameters":{},"id":"9ba6d2ca-2875-4750-a691-224d3c0608be","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[32,720],"typeVersion":1},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=:information_source:  Starting Workflow Backup [{{ $execution.id }}]","otherOptions":{"includeLinkToWorkflow":false}},"id":"0ff0ae39-c397-4f4b-a4d8-7a4eb1bcaae9","name":"Starting Message","type":"n8n-nodes-base.slack","position":[4384,1952],"webhookId":"c02eb407-5547-4aa0-9ebf-46dab67b63b6","typeVersion":2.2},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=✅ Backup has completed - {{ $('n8n1').all().length }} workflows have been processed.","otherOptions":{}},"id":"ac7ca6b9-1283-4ae6-a640-7871d5c9f4cd","name":"Completed Notification","type":"n8n-nodes-base.slack","position":[4976,1792],"webhookId":"a0c6e8c8-5d71-40fa-b02b-63a7ed5726c4","executeOnce":true,"typeVersion":2.2},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=:x: Failed to backup {{ $('Loop Over Items1').item.json.id }}","otherOptions":{"includeLinkToWorkflow":false}},"id":"269fbe6d-d85b-4d45-abac-bc4342812b23","name":"Failed Flows","type":"n8n-nodes-base.slack","position":[5168,1984],"webhookId":"2a092edb-de12-490f-931b-34d70e7d7696","typeVersion":2.2},{"parameters":{"content":"## Subworkflow","height":731.7039821513649,"width":1910.7813046051347,"color":6},"id":"e76aa065-0634-45c6-b362-90f98a8736fa","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[3664,2224],"typeVersion":1},{"parameters":{"filters":{},"requestOptions":{}},"id":"07baebc5-4582-4cca-b239-88ca3ed2122d","name":"n8n1","type":"n8n-nodes-base.n8n","position":[4544,1952],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"99aea5d3-6aae-4180-b0d4-733adda74322","name":"Return1","type":"n8n-nodes-base.set","position":[5392,2432],"typeVersion":3.3},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"7528d46f-e0a3-4ce0-bd5b-25474db74940","name":"Get File1","type":"n8n-nodes-base.httpRequest","position":[4352,2304],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"aba66d08-a699-42a8-9ec3-bff98ef5024e","name":"If file too large1","type":"n8n-nodes-base.if","position":[4112,2320],"typeVersion":2},{"parameters":{},"id":"83804e0a-f08a-4f09-8531-189e6702f486","name":"Merge Items1","type":"n8n-nodes-base.merge","position":[4112,2592],"typeVersion":2},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"},"id":"5371bec9-ec1b-4f19-b5a6-b3478c7d5c50","name":"isDiffOrNew1","type":"n8n-nodes-base.code","position":[4304,2592],"typeVersion":1},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"0d68b022-d3a6-4011-b4bf-915476702bea","name":"Check Status1","type":"n8n-nodes-base.switch","position":[4704,2592],"typeVersion":1},{"parameters":{},"id":"b12d6751-7e75-4e83-8a56-34bb919d6cb9","name":"Same file - Do nothing1","type":"n8n-nodes-base.noOp","position":[4928,2432],"typeVersion":1},{"parameters":{},"id":"34a5ee24-e57e-4604-8ead-a132406cb08e","name":"File is different1","type":"n8n-nodes-base.noOp","position":[4928,2592],"typeVersion":1},{"parameters":{},"id":"61c3591f-89d5-4378-99b3-fdd0e918254b","name":"File is new1","type":"n8n-nodes-base.noOp","position":[4928,2784],"typeVersion":1},{"parameters":{"resource":"file","owner":{"__rl":true,"mode":"","value":"={{ $('Config1').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config1').first().item.repo_name }}"},"filePath":"={{ $('Config1').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew1').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"0179e6ef-e29c-41bb-83e6-9d042e116f0f","name":"Create new file1","type":"n8n-nodes-base.github","position":[5152,2784],"typeVersion":1,"webhookId":"ee193336-697e-40af-a0e2-ecdf0a4bf73d","credentials":{"githubApi":{"id":"5ypNHmn86aweaZT4","name":"lina_token"}}},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"mode":"","value":"={{ $('Config1').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config1').first().item.repo_name }}"},"filePath":"={{ $('Config1').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew1').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"5139f662-ed3c-44e9-9d35-0b4fba88169b","name":"Edit existing file1","type":"n8n-nodes-base.github","position":[5152,2592],"typeVersion":1,"webhookId":"644517e3-e9a2-40c7-9a70-35c53f854532","credentials":{"githubApi":{"id":"5ypNHmn86aweaZT4","name":"lina_token"}}},{"parameters":{"options":{}},"id":"1176e626-9c00-4070-8c70-bb15d848210e","name":"Loop Over Items1","type":"n8n-nodes-base.splitInBatches","position":[4752,1952],"typeVersion":3},{"parameters":{"rule":{"interval":[{"triggerAtHour":1,"triggerAtMinute":33}]}},"id":"a5454648-da7e-4ec6-88ca-1a8b34341aad","name":"Schedule Trigger1","type":"n8n-nodes-base.scheduleTrigger","position":[4144,2048],"typeVersion":1.2},{"parameters":{"assignments":{"assignments":[{"id":"dae43d3b-56e5-4098-b602-862ebf5cd073","name":"subPath","type":"string","value":"={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"}]},"includeOtherFields":true,"options":{}},"id":"044800fd-57da-4c6c-b9d9-7a5513098a3e","name":"Create sub path1","type":"n8n-nodes-base.set","position":[4512,2592],"typeVersion":3.3},{"parameters":{"content":"## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.","height":417,"width":385,"color":4},"id":"b4b237aa-6593-4520-a76a-53b76e7d16bf","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[3664,1760],"typeVersion":1},{"parameters":{"content":"## Main workflow loop","height":416.1856906618075,"width":1272.6408145680155,"color":7},"id":"d0d6fc8b-604f-4503-9748-5dec5251b9e4","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[4112,1760],"typeVersion":1},{"parameters":{"workflowId":"={{ $workflow.id }}","mode":"each","options":{}},"id":"d87af549-9039-480e-8497-2dc49c2ca8c4","name":"Execute Workflow1","type":"n8n-nodes-base.executeWorkflow","position":[4976,1968],"typeVersion":1,"onError":"continueErrorOutput"},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"","value":"={{ $('Config1').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config1').first().item.repo_name }}"},"filePath":"={{ $('Config1').first().item.repo_path }}{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"a18dfd95-a361-477d-9e20-088f0a3dba03","name":"Get file data1","type":"n8n-nodes-base.github","position":[3904,2320],"typeVersion":1,"alwaysOutputData":true,"webhookId":"dfe47850-975b-4b7b-97b4-562aa2a38153","credentials":{"githubApi":{"id":"5ypNHmn86aweaZT4","name":"lina_token"}},"continueOnFail":true},{"parameters":{"assignments":{"assignments":[{"id":"8f6d1741-772f-462a-811f-4c334185e4f0","name":"repo_owner","type":"string","value":"={{ $vars.repo_owner }}"},{"id":"8cac215c-4fd7-422f-9fd2-6b2d1e5e0383","name":"repo_name","type":"string","value":"={{ $vars.repo_name }}"},{"id":"eee305e9-4164-462a-86bd-80f0d58a31ae","name":"repo_path","type":"string","value":"={{ $vars.repo_path }}"}]},"includeOtherFields":true,"options":{}},"id":"fceaeaf2-addc-40ce-a34b-47420018f685","name":"Config1","type":"n8n-nodes-base.set","position":[3904,2608],"typeVersion":3.4}],"connections":{"n8n":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Get File":{"main":[[{"node":"Merge Items","type":"main","index":0}]]},"If file too large":{"main":[[{"node":"Get File","type":"main","index":0}],[{"node":"Merge Items","type":"main","index":0}]]},"Merge Items":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"isDiffOrNew":{"main":[[{"node":"Create sub path","type":"main","index":0}]]},"Check Status":{"main":[[{"node":"Same file - Do nothing","type":"main","index":0}],[{"node":"File is different","type":"main","index":0}],[{"node":"File is new","type":"main","index":0}]]},"Same file - Do nothing":{"main":[[{"node":"Return","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Loop Over Items":{"main":[[{"node":"Msje_Completo","type":"main","index":0}],[{"node":"Execute Workflow","type":"main","index":0}]]},"Create sub path":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Execute Workflow":{"main":[[{"node":"Loop Over Items","type":"main","index":0}],[{"node":"Msje_Fallo","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"If file too large","type":"main","index":0}]]},"Config":{"main":[[{"node":"Merge Items","type":"main","index":1},{"node":"Get file data","type":"main","index":0}]]},"Enviar Msje":{"main":[[{"node":"n8n","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Enviar Msje","type":"main","index":0}]]},"On clicking 'execute'":{"main":[[{"node":"Starting Message","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Config","type":"main","index":0}]]},"Starting Message":{"main":[[{"node":"n8n1","type":"main","index":0}]]},"Failed Flows":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"n8n1":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"Get File1":{"main":[[{"node":"Merge Items1","type":"main","index":0}]]},"If file too large1":{"main":[[{"node":"Get File1","type":"main","index":0}],[{"node":"Merge Items1","type":"main","index":0}]]},"Merge Items1":{"main":[[{"node":"isDiffOrNew1","type":"main","index":0}]]},"isDiffOrNew1":{"main":[[{"node":"Create sub path1","type":"main","index":0}]]},"Check Status1":{"main":[[{"node":"Same file - Do nothing1","type":"main","index":0}],[{"node":"File is different1","type":"main","index":0}],[{"node":"File is new1","type":"main","index":0}]]},"Same file - Do nothing1":{"main":[[{"node":"Return1","type":"main","index":0}]]},"File is different1":{"main":[[{"node":"Edit existing file1","type":"main","index":0}]]},"File is new1":{"main":[[{"node":"Create new file1","type":"main","index":0}]]},"Create new file1":{"main":[[{"node":"Return1","type":"main","index":0}]]},"Edit existing file1":{"main":[[{"node":"Return1","type":"main","index":0}]]},"Loop Over Items1":{"main":[[{"node":"Completed Notification","type":"main","index":0}],[{"node":"Execute Workflow1","type":"main","index":0}]]},"Schedule Trigger1":{"main":[[{"node":"Starting Message","type":"main","index":0}]]},"Create sub path1":{"main":[[{"node":"Check Status1","type":"main","index":0}]]},"Execute Workflow1":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}],[{"node":"Failed Flows","type":"main","index":0}]]},"Get file data1":{"main":[[{"node":"If file too large1","type":"main","index":0}]]},"Config1":{"main":[[{"node":"Get file data1","type":"main","index":0},{"node":"Merge Items1","type":"main","index":1}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"91bfadf9-d00e-498e-9182-2b58bc18123a","triggerCount":0,"shared":[{"updatedAt":"2025-10-28T13:22:05.786Z","createdAt":"2025-10-28T13:22:05.786Z","role":"workflow:owner","workflowId":"nr3lBmrps1WZ1vIq","projectId":"WrvsXos5XEQZNctn"}],"tags":[],"fileName":"\"=Carolina_Aranibar/c.a.investigar-nr3lBmrps1WZ1vIq.json\""}