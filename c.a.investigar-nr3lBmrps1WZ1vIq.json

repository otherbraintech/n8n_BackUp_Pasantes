{"updatedAt":"2025-10-30T16:56:43.000Z","createdAt":"2025-10-28T13:22:05.772Z","id":"nr3lBmrps1WZ1vIq","name":"C.A.investigar","active":false,"isArchived":false,"nodes":[{"parameters":{"assignments":{"assignments":[{"id":"8f6d1741-772f-462a-811f-4c334185e4f0","name":"repo_owner","type":"string","value":"={{ $vars.repo_owner }}"},{"id":"8cac215c-4fd7-422f-9fd2-6b2d1e5e0383","name":"repo_name","type":"string","value":"={{ $vars.repo_name }}"},{"id":"eee305e9-4164-462a-86bd-80f0d58a31ae","name":"repo_path","type":"string","value":"={{ $vars.repo_path }}"}]},"includeOtherFields":true,"options":{}},"id":"fceaeaf2-addc-40ce-a34b-47420018f685","name":"Config1","type":"n8n-nodes-base.set","position":[3904,2608],"typeVersion":3.4},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"","value":"={{ $('Config1').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config1').first().item.repo_name }}"},"filePath":"={{ $('Config1').first().item.repo_path }}{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"a18dfd95-a361-477d-9e20-088f0a3dba03","name":"Get file data1","type":"n8n-nodes-base.github","position":[3904,2320],"typeVersion":1,"alwaysOutputData":true,"webhookId":"dfe47850-975b-4b7b-97b4-562aa2a38153","credentials":{"githubApi":{"id":"5ypNHmn86aweaZT4","name":"lina_token"}},"continueOnFail":true},{"parameters":{"workflowId":"={{ $workflow.id }}","mode":"each","options":{}},"id":"d87af549-9039-480e-8497-2dc49c2ca8c4","name":"Execute Workflow1","type":"n8n-nodes-base.executeWorkflow","position":[4976,1968],"typeVersion":1,"onError":"continueErrorOutput"},{"parameters":{"content":"## Main workflow loop","height":416.1856906618075,"width":1272.6408145680155,"color":7},"id":"d0d6fc8b-604f-4503-9748-5dec5251b9e4","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[4112,1760],"typeVersion":1},{"parameters":{"content":"## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.","height":417,"width":385,"color":4},"id":"b4b237aa-6593-4520-a76a-53b76e7d16bf","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[3664,1760],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"dae43d3b-56e5-4098-b602-862ebf5cd073","name":"subPath","type":"string","value":"={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"}]},"includeOtherFields":true,"options":{}},"id":"044800fd-57da-4c6c-b9d9-7a5513098a3e","name":"Create sub path1","type":"n8n-nodes-base.set","position":[4512,2592],"typeVersion":3.3},{"parameters":{"rule":{"interval":[{"triggerAtHour":1,"triggerAtMinute":33}]}},"id":"a5454648-da7e-4ec6-88ca-1a8b34341aad","name":"Schedule Trigger1","type":"n8n-nodes-base.scheduleTrigger","position":[4144,2048],"typeVersion":1.2,"disabled":true},{"parameters":{"options":{}},"id":"1176e626-9c00-4070-8c70-bb15d848210e","name":"Loop Over Items1","type":"n8n-nodes-base.splitInBatches","position":[4752,1952],"typeVersion":3},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"mode":"","value":"={{ $('Config1').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config1').first().item.repo_name }}"},"filePath":"={{ $('Config1').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew1').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"5139f662-ed3c-44e9-9d35-0b4fba88169b","name":"Edit existing file1","type":"n8n-nodes-base.github","position":[5152,2592],"typeVersion":1,"webhookId":"644517e3-e9a2-40c7-9a70-35c53f854532","credentials":{"githubApi":{"id":"5ypNHmn86aweaZT4","name":"lina_token"}}},{"parameters":{"resource":"file","owner":{"__rl":true,"mode":"","value":"={{ $('Config1').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config1').first().item.repo_name }}"},"filePath":"={{ $('Config1').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew1').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"0179e6ef-e29c-41bb-83e6-9d042e116f0f","name":"Create new file1","type":"n8n-nodes-base.github","position":[5152,2784],"typeVersion":1,"webhookId":"ee193336-697e-40af-a0e2-ecdf0a4bf73d","credentials":{"githubApi":{"id":"5ypNHmn86aweaZT4","name":"lina_token"}}},{"parameters":{},"id":"61c3591f-89d5-4378-99b3-fdd0e918254b","name":"File is new1","type":"n8n-nodes-base.noOp","position":[4928,2784],"typeVersion":1},{"parameters":{},"id":"34a5ee24-e57e-4604-8ead-a132406cb08e","name":"File is different1","type":"n8n-nodes-base.noOp","position":[4928,2592],"typeVersion":1},{"parameters":{},"id":"b12d6751-7e75-4e83-8a56-34bb919d6cb9","name":"Same file - Do nothing1","type":"n8n-nodes-base.noOp","position":[4928,2432],"typeVersion":1},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"0d68b022-d3a6-4011-b4bf-915476702bea","name":"Check Status1","type":"n8n-nodes-base.switch","position":[4704,2592],"typeVersion":1},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"},"id":"5371bec9-ec1b-4f19-b5a6-b3478c7d5c50","name":"isDiffOrNew1","type":"n8n-nodes-base.code","position":[4304,2592],"typeVersion":1},{"parameters":{},"id":"83804e0a-f08a-4f09-8531-189e6702f486","name":"Merge Items1","type":"n8n-nodes-base.merge","position":[4112,2592],"typeVersion":2},{"parameters":{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"aba66d08-a699-42a8-9ec3-bff98ef5024e","name":"If file too large1","type":"n8n-nodes-base.if","position":[4112,2320],"typeVersion":2},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"7528d46f-e0a3-4ce0-bd5b-25474db74940","name":"Get File1","type":"n8n-nodes-base.httpRequest","position":[4352,2304],"typeVersion":4.2},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"99aea5d3-6aae-4180-b0d4-733adda74322","name":"Return1","type":"n8n-nodes-base.set","position":[5392,2432],"typeVersion":3.3},{"parameters":{"filters":{},"requestOptions":{}},"id":"07baebc5-4582-4cca-b239-88ca3ed2122d","name":"n8n1","type":"n8n-nodes-base.n8n","position":[4544,1952],"typeVersion":1},{"parameters":{"content":"## Subworkflow","height":731.7039821513649,"width":1910.7813046051347,"color":6},"id":"e76aa065-0634-45c6-b362-90f98a8736fa","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[3664,2224],"typeVersion":1},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=:x: Failed to backup {{ $('Loop Over Items1').item.json.id }}","otherOptions":{"includeLinkToWorkflow":false}},"id":"269fbe6d-d85b-4d45-abac-bc4342812b23","name":"Failed Flows","type":"n8n-nodes-base.slack","position":[5168,1984],"webhookId":"2a092edb-de12-490f-931b-34d70e7d7696","typeVersion":2.2},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=✅ Backup has completed - {{ $('n8n1').all().length }} workflows have been processed.","otherOptions":{}},"id":"ac7ca6b9-1283-4ae6-a640-7871d5c9f4cd","name":"Completed Notification","type":"n8n-nodes-base.slack","position":[4976,1792],"webhookId":"a0c6e8c8-5d71-40fa-b02b-63a7ed5726c4","executeOnce":true,"typeVersion":2.2},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=:information_source:  Starting Workflow Backup [{{ $execution.id }}]","otherOptions":{"includeLinkToWorkflow":false}},"id":"0ff0ae39-c397-4f4b-a4d8-7a4eb1bcaae9","name":"Starting Message","type":"n8n-nodes-base.slack","position":[4384,1952],"webhookId":"c02eb407-5547-4aa0-9ebf-46dab67b63b6","typeVersion":2.2},{"parameters":{"filters":{},"requestOptions":{}},"id":"21e8df0e-18d1-4446-a5d3-d1bf1e84fa22","name":"Captura de Workflows","type":"n8n-nodes-base.n8n","typeVersion":1,"position":[2400,1248],"alwaysOutputData":false,"credentials":{"n8nApi":{"id":"Vm9hrpp9EAkC4rzG","name":"lina_n8n_credential"}}},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[2960,1248],"id":"e8bb55f1-62fd-4acd-bfa1-1f622187679c","name":"Loop Over Items"},{"parameters":{"resource":"file","owner":{"__rl":true,"value":"={{ $('Establecer campos').item.json['Repository Owner'] }}","mode":"name"},"repository":{"__rl":true,"value":"={{ $('Establecer campos').item.json['Repository Name'] }}","mode":"name"},"filePath":"={{ $binary.data.fileName }}","binaryData":true,"commitMessage":"={{ $('Establecer campos').item.json.commitDate }}"},"id":"60f9713f-16a2-49fa-90f2-fd62b5598213","name":"Uploader de Archivos","type":"n8n-nodes-base.github","typeVersion":1,"position":[3456,1472],"webhookId":"3ba252a0-adac-44b6-9376-d870f52e28bd","credentials":{"githubApi":{"id":"5ypNHmn86aweaZT4","name":"lina_token"}}},{"parameters":{"assignments":{"assignments":[{"id":"a1d52ea6-5912-4988-94c2-115ad59c1996","name":"Repository Owner","value":"C4le0","type":"string"},{"id":"1c15b2e1-bf09-4643-8bba-3215119d2d6b","name":"Repository Name","value":"posnomas","type":"string"},{"id":"712f49ff-8f02-4ac3-aee8-11db8ebe5843","name":"commitDate","value":"={{ (() => {\n  const now = new Date();\n  const day = String(now.getDate()).padStart(2, '0');\n  const month = String(now.getMonth() + 1).padStart(2, '0');\n  const year = now.getFullYear();\n  const hours = String(now.getHours()).padStart(2, '0');\n  const minutes = String(now.getMinutes()).padStart(2, '0');\n  return `${day}-${month}-${year}/${hours}:${minutes}`;\n})() }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1776,1248],"id":"979e2e7d-fa1e-4722-8a62-88b4470aec34","name":"Establecer campos"},{"parameters":{"resource":"file","operation":"list","owner":{"__rl":true,"value":"={{ $json[\"Repository Owner\"] }}","mode":"name"},"repository":{"__rl":true,"value":"={{ $json['Repository Name'] }}","mode":"name"}},"type":"n8n-nodes-base.github","typeVersion":1.1,"position":[2000,1248],"id":"129a199f-48e9-45c4-b9a9-c7ec17c1c003","name":"Listar archivos","webhookId":"05c29369-ddf5-4cea-ad82-2360b9460243","alwaysOutputData":true,"credentials":{"githubApi":{"id":"5ypNHmn86aweaZT4","name":"lina_token"}},"onError":"continueRegularOutput"},{"parameters":{"mode":"jsonToBinary","options":{"fileName":"={{ $json.folderName + '/' + $json.name.replace(/\\s+/g, '-').toLowerCase() + '-' + $json.id + '.json' }}\n"}},"id":"faaa0bda-c487-4b68-8de8-aeb7a910a5ed","name":"Convertir a binario","type":"n8n-nodes-base.moveBinaryData","typeVersion":1,"position":[2768,1248]},{"parameters":{"conditions":{"string":[{"value1":"={{ $node['Combinar archivos'].json.name }}","operation":"contains","value2":"={{ $('Loop Over Items').item.binary.data.fileName }}"}]}},"id":"2016a843-2660-461a-ac7e-67f8233cf3a8","name":"Si existe","type":"n8n-nodes-base.if","typeVersion":1,"position":[3232,1136]},{"parameters":{"fieldsToAggregate":{"fieldToAggregate":[{"fieldToAggregate":"name"}]},"options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[2208,1248],"id":"ef5b274d-0167-4002-ba48-81dff3c17574","name":"Combinar archivos"},{"parameters":{"chatId":"=-5025421715\"","text":"={{ $json[\"mensaje\"] }}","additionalFields":{}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[2752,1520],"id":"94c7ad87-cb20-4a7c-85ff-5dc08fd7580e","name":"Msje_actualizacion","webhookId":"1b11f945-8459-404b-8212-f5d61580beed","credentials":{"telegramApi":{"id":"Y2Y3ArkzvoQpRAE9","name":"n8n_BckUp_bot"}}},{"parameters":{"jsCode":"// 1) Mapea siglas → nombre legible\nconst folderMap = {\n  'D.R.': 'Demetrio Rojas',\n  'C.A.': 'Carolina Aranibar',\n  'M.A.': 'Miguel Ayma'\n};\n\n// 2) Obtenemos todos los workflows desde el nodo \"Captura de Workflows\"\nconst workflows = $items(\"Captura de Workflows\");\n\n// 3) Crear un mapa agrupado por carpetas (inferidas por siglas)\nconst carpetas = {};\n\nfor (const item of workflows) {\n  const fullName = item.json.name || \"Sin nombre\";\n  \n  // Detecta siglas al inicio (ej. D.R., C.A., M.A.)\n  const siglas = fullName.match(/^([A-Z]\\.[A-Z]+\\.)/)?.[0] || 'OTR.';\n  const carpeta = folderMap[siglas] || 'Otro';\n  const nombreCorto = fullName.replace(siglas, '');\n\n  if (!carpetas[carpeta]) {\n    carpetas[carpeta] = [];\n  }\n  carpetas[carpeta].push(nombreCorto);\n}\n\n// 4) Generar texto formateado con emojis\nlet texto = \"✔️ Respaldo diario finalizado\\n\\n\";\n\nfor (const [carpeta, lista] of Object.entries(carpetas)) {\n  texto += `📁 ${carpeta}\\n`;\n  for (const wf of lista) {\n    texto += `  📄 ${wf}\\n`;\n  }\n}\n\n// 5) Totales y fecha\nconst totalWorkflows = workflows.length;\nconst totalCarpetas = Object.keys(carpetas).length;\nconst fecha = $node[\"Establecer campos1\"]?.item?.json?.commitDate || new Date().toISOString();\n\ntexto += `\\n📊 Total: ${totalWorkflows} workflows\\n`;\ntexto += `📁 Carpetas: ${totalCarpetas}\\n`;\ntexto += `🗓 Fecha: ${fecha}`;\n\nreturn [{ json: { mensaje: texto.trim() } }];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2576,1520],"id":"635646f0-d13b-46f3-b0fb-dad71d6958c4","name":"Resumen de Backups","disabled":true},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"value":"={{ $('Establecer campos').item.json['Repository Owner'] }}","mode":"name"},"repository":{"__rl":true,"value":"={{ $('Establecer campos').item.json['Repository Name'] }}","mode":"name"},"filePath":"={{ [$binary.data.directory, $binary.data.fileName].join('/') }}","binaryData":true,"commitMessage":"={{ $('Establecer campos').item.json.commitDate }}"},"id":"ce23d88c-b07c-4d80-8e4b-e450d304d4a5","name":"Actualizador de Archivos2","type":"n8n-nodes-base.github","typeVersion":1,"position":[3456,1248],"webhookId":"ad758c2a-4f50-4db1-a3f3-a422c67ac0a2","credentials":{"githubApi":{"id":"5ypNHmn86aweaZT4","name":"lina_token"}}},{"parameters":{"assignments":{"assignments":[{"id":"e0311635-47c5-4750-a926-6477ea406b4b","name":"fileName","value":"=\"={{ {'D.R.':'Demetrio_Rojas','C.A.':'Carolina_Aranibar','M.A.':'Miguel_Ayma'}[$json.name.match(/^([A-Z]\\.[A-Z]+\\.)/)?.[0]] || 'Otro' }}/{{ $json.name.replace(/\\\\s+/g,'-').toLowerCase() }}-{{ $json.id }}.json\"","type":"string"}]},"includeOtherFields":true,"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[2192,816],"id":"b502b482-40f1-420d-87ad-beb55200736b","name":"Edit Fields"},{"parameters":{"resource":"file","operation":"list","owner":{"__rl":true,"value":"={{ $json[\"Repository Owner\"] }}","mode":"name"},"repository":{"__rl":true,"value":"={{ $json['Repository Name'] }}","mode":"name"}},"type":"n8n-nodes-base.github","typeVersion":1.1,"position":[1952,1552],"id":"6ebeb26d-72f3-4987-a142-9dac9aa4b269","name":"Listar archivos2","webhookId":"05c29369-ddf5-4cea-ad82-2360b9460243","alwaysOutputData":true,"credentials":{"githubApi":{"id":"3yLUEtmACY1nHcUz","name":"OtherBrainGit"}},"onError":"continueRegularOutput"},{"parameters":{"jsCode":"const map = { 'D.R.': 'Demetrio_Rojas', 'C.A.': 'Carolina_Aranibar', 'M.A.': 'Miguel_Ayma' };\n\nreturn items.map(item => {\n  const name = item.json.name;                 // nombre original del workflow\n  const prefix = name.match(/^([A-Z]\\.[A-Z]+\\.)/)?.[0];\n  const folder = map[prefix] || 'Otro';\n  const file = name.replace(/\\s+/g, '-').toLowerCase() + '-' + item.json.id + '.json';\n\n  // devolvemos el item completo + las nuevas claves\n  return {\n    json: {\n      ...item.json,          // conservamos TODO lo que venía\n      folderName: folder,\n      fileName: file\n    }\n  };\n});"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2592,1040],"id":"cb375c48-fd7e-4e67-9b0f-e52f4b043bd5","name":"Code in JavaScript"}],"connections":{"Config1":{"main":[[{"node":"Get file data1","type":"main","index":0},{"node":"Merge Items1","type":"main","index":1}]]},"Get file data1":{"main":[[{"node":"If file too large1","type":"main","index":0}]]},"Execute Workflow1":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}],[{"node":"Failed Flows","type":"main","index":0}]]},"Schedule Trigger1":{"main":[[{"node":"Starting Message","type":"main","index":0}]]},"Loop Over Items1":{"main":[[{"node":"Completed Notification","type":"main","index":0}],[{"node":"Execute Workflow1","type":"main","index":0}]]},"File is new1":{"main":[[{"node":"Create new file1","type":"main","index":0}]]},"File is different1":{"main":[[{"node":"Edit existing file1","type":"main","index":0}]]},"Create sub path1":{"main":[[{"node":"Check Status1","type":"main","index":0}]]},"Check Status1":{"main":[[{"node":"Same file - Do nothing1","type":"main","index":0}],[{"node":"File is different1","type":"main","index":0}],[{"node":"File is new1","type":"main","index":0}]]},"isDiffOrNew1":{"main":[[{"node":"Create sub path1","type":"main","index":0}]]},"Merge Items1":{"main":[[{"node":"isDiffOrNew1","type":"main","index":0}]]},"If file too large1":{"main":[[{"node":"Get File1","type":"main","index":0}],[{"node":"Merge Items1","type":"main","index":0}]]},"Get File1":{"main":[[{"node":"Merge Items1","type":"main","index":0}]]},"Edit existing file1":{"main":[[{"node":"Return1","type":"main","index":0}]]},"Create new file1":{"main":[[{"node":"Return1","type":"main","index":0}]]},"Same file - Do nothing1":{"main":[[{"node":"Return1","type":"main","index":0}]]},"n8n1":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"Failed Flows":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"Starting Message":{"main":[[{"node":"n8n1","type":"main","index":0}]]},"Enviar Msje":{"main":[[{"node":"n8n","type":"main","index":0}]]},"Captura de Workflows":{"main":[[{"node":"Resumen de Backups","type":"main","index":0},{"node":"Code in JavaScript","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Si existe","type":"main","index":0}]]},"Uploader de Archivos":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Establecer campos":{"main":[[{"node":"Listar archivos","type":"main","index":0}]]},"Listar archivos":{"main":[[{"node":"Combinar archivos","type":"main","index":0}]]},"Convertir a binario":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Si existe":{"main":[[{"node":"Actualizador de Archivos2","type":"main","index":0}],[{"node":"Uploader de Archivos","type":"main","index":0}]]},"Combinar archivos":{"main":[[{"node":"Captura de Workflows","type":"main","index":0}]]},"Resumen de Backups":{"main":[[]]},"Actualizador de Archivos2":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Edit Fields":{"main":[[]]},"Code in JavaScript":{"main":[[{"node":"Convertir a binario","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"cbf2e4a1-59bf-4d69-bd3e-6d005143e887","triggerCount":0,"shared":[{"updatedAt":"2025-10-28T13:22:05.786Z","createdAt":"2025-10-28T13:22:05.786Z","role":"workflow:owner","workflowId":"nr3lBmrps1WZ1vIq","projectId":"WrvsXos5XEQZNctn"}],"tags":[],"fileName":"\"=Carolina_Aranibar/c.a.investigar-nr3lBmrps1WZ1vIq.json\""}